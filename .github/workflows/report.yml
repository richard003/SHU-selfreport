name: Auto Report

on:
  schedule:
    - cron: "0 0,12 * * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up chromedriver
        uses: nanasess/setup-chromedriver@v1
        with:
          # Optional: do not specify to match Chrome's version
          chromedriver-version: "97.0.4692.71"
      - run: |
          export DISPLAY=:99
          chromedriver --url-base=/wd/hub &
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Configure OpenVPN
        env:
          users: ${{ secrets.USERS }}
        run: |
          sudo apt update
          sudo apt install -y openvpn openvpn-systemd-resolved
          echo "::add-mask::$(python main.py gh-vu)"
          echo "::add-mask::$(python main.py gh-vp)"
          echo "ovpn_username=$(python main.py gh-vu)" >> $GITHUB_ENV
          echo "ovpn_password=$(python main.py gh-vp)" >> $GITHUB_ENV

      - name: Connect to VPN
        uses: "kota65535/github-openvpn-connect-action@v1"
        with:
          config_file: .github/vpn/config.ovpn
          username: ${{ env.ovpn_username }}
          password: ${{ env.ovpn_password }}

      - name: Test a VPN connection
        timeout-minutes: 1
        run: until ping -c1 xk.autoisp.shu.edu.cn; do sleep 2; done

      - name: Report
        if: always()
        env:
          users: ${{ secrets.USERS }}
        run: "python -u main.py"
